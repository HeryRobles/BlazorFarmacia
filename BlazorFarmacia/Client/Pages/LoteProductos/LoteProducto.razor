@page "/loteProducto"
@page "/loteProducto/{id:int}"
@using BlazorFarmacia.Shared.DTOS.LotesProductos

@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h3>LoteProducto</h3>

<EditForm Model="loteProducto" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    <div class="col-lg-12">
        <div class="mb-3">
            <label class="form-label">Lote</label>
            <InputNumer id="Lote" class="form-control" @bind-Value="@loteProducto.Lote" />
            <ValidationMessage For="@(() => loteProducto.Lote)" />
        </div>
    </div>

    <div class="col-1g-12 text-end mb-3 pt-4">
        <hr />
        <button type="button" class="btn btn-danger" onclick="history.back()">Cancelar</button>
        <button type="submit" class="btn btn-success">Guardar</button>
    </div>


</EditForm>

@code {
    protected LoteProductoDto loteProducto = new LoteProductoDto();
    [Parameter] public int id { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        if (id > 0)
        {
            var response = await httpClient.GetFromJsonAsync<LoteProductoDto>($"api/LotesProductos/{id}");
            if (response != null)
            {
                loteProducto = response;
            }
        }
    }

    private async Task OnValidSubmit()
    {
        if (id > 0)
        {
            await httpClient.PutAsJsonAsync<LoteProductoDto>("api/LotesProductos", loteProducto);
        }
        else
        {
            await httpClient.PostAsJsonAsync<LoteProductoDto>("api/LotesProductos", loteProducto);
        }

        navigationManager.NavigateTo("loteProducto");
    }

}
